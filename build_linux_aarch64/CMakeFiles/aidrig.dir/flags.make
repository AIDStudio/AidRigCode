# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.16

# compile C with /usr/bin/aarch64-linux-gnu-gcc
# compile CXX with /usr/bin/aarch64-linux-gnu-g++
C_FLAGS =  -Wall -Wno-strict-aliasing -march=armv8-a+crypto -g   -std=gnu99

C_DEFINES = -DHAVE_BUILTIN_CLEAR_CACHE -DHAVE_SYSLOG_H -DUNICODE -DXMRIG_64_BIT -DXMRIG_ALGO_ARGON2 -DXMRIG_ALGO_CN_FEMTO -DXMRIG_ALGO_CN_HEAVY -DXMRIG_ALGO_CN_LITE -DXMRIG_ALGO_CN_PICO -DXMRIG_ALGO_GHOSTRIDER -DXMRIG_ALGO_KAWPOW -DXMRIG_ALGO_RANDOMX -DXMRIG_ARM=8 -DXMRIG_ARM_CRYPTO -DXMRIG_FEATURE_API -DXMRIG_FEATURE_BENCHMARK -DXMRIG_FEATURE_DMI -DXMRIG_FEATURE_ENV -DXMRIG_FEATURE_HTTP -DXMRIG_FEATURE_TLS -DXMRIG_JSON_SINGLE_LINE_ARRAY -DXMRIG_MINER_PROJECT -DXMRIG_OS_LINUX -DXMRIG_OS_UNIX -D_FILE_OFFSET_BITS=64 -D_GNU_SOURCE -D__STDC_FORMAT_MACROS

C_INCLUDES = -I/workspaces/AidRigCode/third_party/openssl-1.1.1w/install/include -I/workspaces/AidRigCode/src -I/workspaces/AidRigCode/src/3rdparty -I/workspaces/AidRigCode/third_party/libuv/build_aarch64/install/include 

CXX_FLAGS =  -Wall -fexceptions -fno-rtti -Wno-strict-aliasing -Wno-class-memaccess -march=armv8-a+crypto -flax-vector-conversions -g   -std=c++11

CXX_DEFINES = -DHAVE_BUILTIN_CLEAR_CACHE -DHAVE_SYSLOG_H -DUNICODE -DXMRIG_64_BIT -DXMRIG_ALGO_ARGON2 -DXMRIG_ALGO_CN_FEMTO -DXMRIG_ALGO_CN_HEAVY -DXMRIG_ALGO_CN_LITE -DXMRIG_ALGO_CN_PICO -DXMRIG_ALGO_GHOSTRIDER -DXMRIG_ALGO_KAWPOW -DXMRIG_ALGO_RANDOMX -DXMRIG_ARM=8 -DXMRIG_ARM_CRYPTO -DXMRIG_FEATURE_API -DXMRIG_FEATURE_BENCHMARK -DXMRIG_FEATURE_DMI -DXMRIG_FEATURE_ENV -DXMRIG_FEATURE_HTTP -DXMRIG_FEATURE_TLS -DXMRIG_JSON_SINGLE_LINE_ARRAY -DXMRIG_MINER_PROJECT -DXMRIG_OS_LINUX -DXMRIG_OS_UNIX -D_FILE_OFFSET_BITS=64 -D_GNU_SOURCE -D__STDC_FORMAT_MACROS

CXX_INCLUDES = -I/workspaces/AidRigCode/third_party/openssl-1.1.1w/install/include -I/workspaces/AidRigCode/src -I/workspaces/AidRigCode/src/3rdparty -I/workspaces/AidRigCode/third_party/libuv/build_aarch64/install/include 

# Custom flags: CMakeFiles/aidrig.dir/src/crypto/cn/CnHash.cpp.o_FLAGS = -O3 -fno-fast-math -fno-tree-vectorize

